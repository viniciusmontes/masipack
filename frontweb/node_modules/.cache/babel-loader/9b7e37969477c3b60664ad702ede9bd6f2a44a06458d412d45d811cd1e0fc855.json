{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusvini/Documents/workspace-vscode/masipack/frontweb/src/pages/Admin/PermissionGroupView/index.tsx\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useEffect, useState } from 'react';\nimport { requestBackend } from 'util/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PermissionGroupView = () => {\n  _s();\n  const [permissionsGroup, setPermissionGroup] = useState([]);\n  useEffect(() => {\n    const config = {\n      method: 'GET',\n      url: '/permission-group',\n      withCredentials: true\n    };\n    requestBackend(config).then(response => {\n      setPermissionGroup(response.data);\n    });\n  }, []);\n  const handleInsertPermissionGroup = permissionGroup => {\n    const clone = [...permissionsGroup];\n    clone.push(permissionGroup);\n    setPermissionGroup(clone);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"permission-group-view\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(PermissionGroupView, \"efu7cUC1PukmBvnrEcOrZo119Bg=\");\n_c = PermissionGroupView;\nexport default PermissionGroupView;\nvar _c;\n$RefreshReg$(_c, \"PermissionGroupView\");","map":{"version":3,"names":["useEffect","useState","requestBackend","jsxDEV","_jsxDEV","PermissionGroupView","_s","permissionsGroup","setPermissionGroup","config","method","url","withCredentials","then","response","data","handleInsertPermissionGroup","permissionGroup","clone","push","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viniciusvini/Documents/workspace-vscode/masipack/frontweb/src/pages/Admin/PermissionGroupView/index.tsx"],"sourcesContent":["\nimport { PermissionGroup } from 'types/permissiongroup';\nimport './styles.css'\nimport { useEffect, useState } from 'react';\nimport { AxiosRequestConfig } from 'axios';\nimport { requestBackend } from 'util/requests';\n\n\n\nconst PermissionGroupView = () => {\n\n    const [permissionsGroup, setPermissionGroup] = useState<PermissionGroup[]>([])\n\n    useEffect(() => {\n        const config: AxiosRequestConfig = {\n          method: 'GET',\n          url: '/permission-group',\n          withCredentials: true,\n        };\n        requestBackend(config)\n          .then((response) => {\n            setPermissionGroup(response.data);\n          })\n      }, []);\n\n      const handleInsertPermissionGroup = (permissionGroup: PermissionGroup) => {\n        const clone = [...permissionsGroup];\n        clone.push(permissionGroup);\n        setPermissionGroup(clone);\n      };\n    \n\n    return (\n        <div className=\"permission-group-view\">\n\n        </div>\n    )\n}\n\nexport default PermissionGroupView;"],"mappings":";;AAEA,OAAO,cAAc;AACrB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAoB,EAAE,CAAC;EAE9ED,SAAS,CAAC,MAAM;IACZ,MAAMS,MAA0B,GAAG;MACjCC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,mBAAmB;MACxBC,eAAe,EAAE;IACnB,CAAC;IACDV,cAAc,CAACO,MAAM,CAAC,CACnBI,IAAI,CAAEC,QAAQ,IAAK;MAClBN,kBAAkB,CAACM,QAAQ,CAACC,IAAI,CAAC;IACnC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,2BAA2B,GAAIC,eAAgC,IAAK;IACxE,MAAMC,KAAK,GAAG,CAAC,GAAGX,gBAAgB,CAAC;IACnCW,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC;IAC3BT,kBAAkB,CAACU,KAAK,CAAC;EAC3B,CAAC;EAGH,oBACId,OAAA;IAAKgB,SAAS,EAAC;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA5BKD,mBAAmB;AAAAoB,EAAA,GAAnBpB,mBAAmB;AA8BzB,eAAeA,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}