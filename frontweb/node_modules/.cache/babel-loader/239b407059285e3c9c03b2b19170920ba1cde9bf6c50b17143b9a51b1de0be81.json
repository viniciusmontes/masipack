{"ast":null,"code":"var _process$env$REACT_AP;\nimport axios from 'axios';\nimport { getAuthData } from './storage';\nexport const BASE_URL = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://142.171.135.63:8088/v1';\nexport const requestBackendLogin = loginData => {\n  return axios({\n    method: 'POST',\n    baseURL: BASE_URL,\n    url: '/login',\n    data: loginData\n  });\n};\nexport const requestBackend = config => {\n  const headers = config.withCredentials ? {\n    ...config.headers,\n    Authorization: 'Bearer ' + getAuthData().access_token\n  } : config.headers;\n  return axios({\n    ...config,\n    baseURL: BASE_URL,\n    headers\n  });\n};\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    history.push(\"/\");\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","getAuthData","BASE_URL","_process$env$REACT_AP","process","env","REACT_APP_BACKEND_URL","requestBackendLogin","loginData","method","baseURL","url","data","requestBackend","config","headers","withCredentials","Authorization","access_token","interceptors","request","use","error","Promise","reject","response","status","history","push"],"sources":["/Users/viniciusvini/Documents/workspace-vscode/masipack/frontweb/src/util/requests.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport { getAuthData } from './storage';\n\n\nexport const BASE_URL =\n  process.env.REACT_APP_BACKEND_URL ?? 'http://142.171.135.63:8088/v1';\n\ntype LoginData = {\n  login: string;\n  password: string;\n};\n\nexport const requestBackendLogin = (loginData: LoginData) => {\n  \n    return axios({\n    method: 'POST',\n    baseURL: BASE_URL,\n    url: '/login',\n    data: loginData,\n  });\n};\n\nexport const requestBackend = (config: AxiosRequestConfig) => {\n  const headers = config.withCredentials\n    ? {\n        ...config.headers,\n        Authorization:\n          'Bearer ' + getAuthData().access_token\n      }\n    : config.headers;\n\n  return axios({ ...config, baseURL: BASE_URL, headers });\n};\n\naxios.interceptors.request.use(\n  function (config) {\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    if (error.response.status === 401) {\n      history.push(\"/\");\n    }\n    return Promise.reject(error);\n  }\n);"],"mappings":";AAAA,OAAOA,KAAK,MAA8B,OAAO;AACjD,SAASC,WAAW,QAAQ,WAAW;AAGvC,OAAO,MAAMC,QAAQ,IAAAC,qBAAA,GACnBC,OAAO,CAACC,GAAG,CAACC,qBAAqB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,+BAA+B;AAOtE,OAAO,MAAMI,mBAAmB,GAAIC,SAAoB,IAAK;EAEzD,OAAOR,KAAK,CAAC;IACbS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAER,QAAQ;IACjBS,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAEJ;EACR,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,MAA0B,IAAK;EAC5D,MAAMC,OAAO,GAAGD,MAAM,CAACE,eAAe,GAClC;IACE,GAAGF,MAAM,CAACC,OAAO;IACjBE,aAAa,EACX,SAAS,GAAGhB,WAAW,CAAC,CAAC,CAACiB;EAC9B,CAAC,GACDJ,MAAM,CAACC,OAAO;EAElB,OAAOf,KAAK,CAAC;IAAE,GAAGc,MAAM;IAAEJ,OAAO,EAAER,QAAQ;IAAEa;EAAQ,CAAC,CAAC;AACzD,CAAC;AAEDf,KAAK,CAACmB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAUP,MAAM,EAAE;EAChB,OAAOA,MAAM;AACf,CAAC,EACD,UAAUQ,KAAK,EAAE;EACf,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDtB,KAAK,CAACmB,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAC7B,UAAUI,QAAQ,EAAE;EAClB,OAAOA,QAAQ;AACjB,CAAC,EACD,UAAUH,KAAK,EAAE;EACf,IAAIA,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjCC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EACnB;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}